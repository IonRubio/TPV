package CTPV;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;

public class CTPV extends javax.swing.JFrame{

    private JMenuBar mb;
    private JMenu menu1;
    private JMenuItem comunicar;

    public CTPV() {
        mb = new JMenuBar();
        setJMenuBar(mb);
        menu1 = new JMenu("Comunicar con Jefe");
        mb.add(menu1);
        comunicar = new JMenuItem("Transferir Datos");
        menu1.add(comunicar);
        comunicar.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent arg0) {
                System.out.println("Transfiriendo Datos .....");
                arrancarHiloCambiosVentas();
            }
        });
        
        initComponents();
        //Ventana maximizada desde el inicio
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        //Lamamos al metodo que hara que el servidor escuche
        ImageIcon image = new ImageIcon(getClass().getResource("/iconos/tpv.png"));
        this.setIconImage(image.getImage());
        arrancaHiloPrincipal();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CTPV");
        setForeground(java.awt.Color.white);
        setMinimumSize(new java.awt.Dimension(1300, 700));

        jDesktopPane1.setLayout(new java.awt.GridLayout(2, 3));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CTPV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CTPV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CTPV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CTPV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CTPV().setVisible(true);
            }
        });
    }

    public JDesktopPane getPanel() {
        //System.out.println("Dentro getDesktopPane");
        return jDesktopPane1;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane1;
    // End of variables declaration//GEN-END:variables

    private void arrancaHiloPrincipal() {
        //Creo objeto hilo principal
        HiloPrincipal hilo = new HiloPrincipal(this);
        //Creo un hilo del objeto de HiloPrincipal 
        Thread th = new Thread(hilo);
        th.start();
    }

    private void arrancarHiloCambiosVentas() {
        //Creo objeto hilo principal
        HiloCambiosVentas hilo = new HiloCambiosVentas();
        //Creo un hilo del objeto de HiloPrincipal 
        Thread th = new Thread(hilo);
        th.start();
    }

}
